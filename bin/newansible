#!/usr/bin/env bash
# ex: set filetype=sh fenc=utf-8 expandtab ts=4 sw=4 cursorcolumn :
##
##Usage:  __SCRIPT__ FILENAME
##generates a new ansible playbook using default template
##    FILENAME: new playbook's filepath
##

set -euo pipefail
function usage() { sed -r -n -e "s/__SCRIPT__/$(basename $0)/" -e '/^##/s/^..// p'   $0 ; }
[[ $# -eq 1 && ( "$1" == -h || "$1" == --help ) ]] && usage && exit 0
[[ $# -lt 1 || $# -gt 1 ]] && echo "FATAL: incorrect number of args" && usage && exit 1
for i in chmod touch; do ! command -v "$i" &>/dev/null && echo "FATAL: unexisting dependency $i" && exit 1; done

f="$1"
extension="${f##*.}"
if [[ $f != *.* || "$extension" = "" ]]; then
    f="${f}.yml"
fi
[[ -f "$f" ]] && echo "FATAL: already exists file $f" && exit 1
[[ -d "$f" ]] && echo "FATAL: already exists directory $f" && exit 1

touch "$f" || { echo "FATAL: Can't touch to $f" && exit 1; }


# @begin=yaml@
cat << 'HERE_DOCUMENT' | sed -r -e "s/FILENAME/$(basename $f .yml)/g" >>$f
# ex: set filetype=yaml.ansible fenc=utf-8 expandtab ts=2 sw=2 :
## vimf6_ansible_args: --diff
## vimf6_ansible_args: --diff --check -vv
## vimf6_ansible_args: --diff -i ./.vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory
## vimf6_ansible_nolocalsudo: yes
- hosts:
    - localhost
  connection: local
  gather_facts: no
  vars:
    mydict:
      key1: value1
      keyB: valueB
      keyThree: value three
    mylist:
       - one
       - zwei
       - 3
    filename: FILENAME

  tasks:

    - setup:
        gather_subset: min
      when: no

    - shell: date
      register: myvar

    - debug:
        var: myvar.stdout

    - debug:
        msg: |
          my dict is
          {{ mydict | to_nice_yaml }}
HERE_DOCUMENT
# @end=yaml@

echo "$f"
exit 0
