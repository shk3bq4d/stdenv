#!/usr/bin/env bash
# ex: set filetype=sh :
##
##Usage:  __SCRIPT__ REMOTEHOST [REMOTEPORT]
##configures whatever action with whatever config
##    REMOTEHOST: remote host where to ssh
##    REMOTEPORT: JMX port (default: 12345)
##
## Author: Jeff Malone, 04 Jul 2018
##

set -euo pipefail

# function usage() { sed -r -n -e s/__SCRIPT__/$(basename $0)/ -e '/^##/s/^..// p'   $0 ; }

# [[ $# -eq 1 && ( $1 == -h || $1 == --help ) ]] && usage && exit 0

# [[ $# -lt 1 || $# -gt 2 ]] && echo FATAL: incorrect number of args && usage && exit 1

# for i in sed which grep; do ! command -v $i &>/dev/null && echo FATAL: unexisting dependency $i && exit 1; done

# DIR="$( cd -P "$( dirname "$(readlink -f "${BASH_SOURCE[0]}")" )" && pwd )"

# exec > >(tee -a ~/log/$(basename $0 .sh).log)
# exec > >(tee >(logger --id=$$ -t "$(basename $0)" -p user.info ))
# exec 2>&1

# test -z "${HOSTNAMEF:-}" && HOSTNAMEF=$(hostname -f)
#
terraform_version=0.11.8
terraform_version=0.11.10
terraform_version=0.11.13

BIN="$HOME/bin/terraform-$terraform_version"


if [[ ! -f $BIN ]]; then
	echo -n "$BIN doesn't exist. Would you like to download it? (yN): "
	read _read
	echo # read
	case "${_read,,}" in \
	y|Y|yes)
		true
		;;
	*)   
		exit 1
		;;
	esac
	curl -Os https://releases.hashicorp.com/terraform/$terraform_version/terraform_"$terraform_version"_linux_amd64.zip
	unzip -d ~/.tmp terraform_"$terraform_version"_linux_amd64.zip 
	mv ~/.tmp/terraform ~/bin/terraform-$terraform_version
fi

~/bin/terraform-$terraform_version "$@"
exit $?
