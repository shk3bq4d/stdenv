#!/usr/bin/env bash
# ex: set filetype=sh fenc=utf-8 expandtab ts=4 sw=4 :

set -euo pipefail
BINNAME="$(basename "$0")"
SCRIPT_FILEPATH="$( dirname "$(readlink -f "${BASH_SOURCE[0]}")" )"
if [[ -n "${STDENV_ANSIBLE_PLAYBOOK:-}" ]]; then
    echo "recursion detected, aborting. Which -a ansible-playbook"
    which -a ansible-playbook
    exit 1
fi
export STDENV_ANSIBLE_PLAYBOOK=1
if [[ -n "${SUDO_USER:-}" ]]; then
    # session accessed via sudo
    USER="${SUDO_USER}"
elif [[ ${EUID:-5} -eq 0 ]]; then
    # session access via crontab
    USER="$(stat -c "%U" $SCRIPT_FILEPATH)"
else
    USER=$(id -un)
fi
HOME=$( eval echo ~$USER)
echo HOME is $HOME, user is $USER
vaults_args=""
if [[ -d secrets ]]; then
    vaults_args="$(find secrets -maxdepth 1 -type f -name 'ansible-vault-*' |
        sed -r -e 's,secrets/ansible-vault-(.*),--vault-id \1@\0,' |
        tr '\n' ' '
        )"
fi
vagrant_args=()
if [[ -f .vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory ]]; then
    vagrant_args+=('--ssh-extra-arg="-o StrictHostKeyChecking=No"')
    vagrant_args+=('-i')
    vagrant_args+=('.vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory')
fi
echo "vaults_args are $vaults_args"
DIR="$( cd -P "$( dirname "$(readlink -f "${BASH_SOURCE[0]}")" )" && pwd )"
source $HOME/bin/dot.bashfunctions; pathremove "$DIR"
for f in \
    $HOME/.virtualenvs/ansible/bin/activate \
    $HOME/.virtualenvs/ansible-2.10/bin/activate \
    $DIR/../.virtualenvs/ansible/bin/activate \
    $DIR/../.virtualenvs/ansible-2.10/bin/activate \
    ; do
    if [[ -f $f  ]]; then
        set +u; source $f; set -u; # set -u sometimes fail in venv activation https://stackoverflow.com/questions/42997258/virtualenv-activate-script-wont-run-in-bash-script-with-set-euo
        export PATH="$PATH:$DIR" # iaac needs to have ~/bin in PATH that was removed with pathremove
        set -x
        set +u
        "$BINNAME" "${vagrant_args[@]}" $vaults_args "$@"
        set -u
        exit $?
    fi
done
BIN=$(which -a "$BINNAME" | tail -n +2 | head -n 1)
if [[ -z "$BIN" ]]; then
    echo "FATAL: could no find "$BINNAME" outside of myself"
    which -a "$BINNAME"
    exit 1
fi
$BIN $( echo -n "${vagrant_args[@]}") $vaults_args "$@"
