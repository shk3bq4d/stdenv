#!/usr/bin/env bash
# /* ex: set filetype=sh fenc=utf-8 expandtab ts=4 sw=4 : */#

set -euo pipefail

# function usage() { sed -r -n -e s/__SCRIPT__/$(basename $0)/ -e '/^##/s/^..// p'   $0 ; }

# [[ $# -eq 1 && ( $1 == -h || $1 == --help ) ]] && usage && exit 0

# [[ $# -lt 1 || $# -gt 2 ]] && echo FATAL: incorrect number of args && usage && exit 1

# for i in sed which grep; do ! command -v $i &>/dev/null && echo FATAL: unexisting dependency $i && exit 1; done

# DIR="$( cd -P "$( dirname "$(readlink -f "${BASH_SOURCE[0]}")" )" && pwd )"

# exec > >(tee -a ~/log/$(basename $0 .sh).log)
# exec > >(tee >(logger --id=$$ -t "$(basename $0)" -p user.info ))
# exec 2>&1

# test -z "${HOSTNAMEF:-}" && HOSTNAMEF=$(hostname -f)
#
gh_version=2.43.1


BIN="$HOME/bin/gh-$gh_version"

if [[ ! -f $BIN ]]; then
    if [[ ! -t 0 ]]; then
        echo "FATAL: $BIN doesn't exist and stdin is not a TTY"
        exit 1
    fi
    echo -n "$BIN doesn't exist. Would you like to download it? (yN): "
    read _read
    echo # read
    case "${_read,,}" in \
    y|Y|yes)
        true
        ;;
    *)
        exit 1
        ;;
    esac
    cd ~/.tmp
    #        https://github.com/cli/cli/releases/download/v2.43.1/gh_2.43.1_linux_amd64.tar.gz
    curl -OLs https://github.com/cli/cli/releases/download/v${gh_version}/gh_${gh_version}_linux_amd64.tar.gz
    #test -d linux-amd64 && echo FATAL: dir already exists ~/.tmp/linux-amd64 && exit 1
    #curl -Os https://get.helm.sh/helm-v${helm_version}-linux-amd64.tar.gz
    tar xzf gh_${gh_version}_linux_amd64.tar.gz
    mv      gh_${gh_version}_linux_amd64/bin/gh $BIN
    rm -rf  gh_${gh_version}_linux_amd64/
fi


$BIN "$@"
exit $?
