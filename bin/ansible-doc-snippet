#!/usr/bin/env bash
# ex: set filetype=sh fenc=utf-8 expandtab ts=4 sw=4 :

set -euo pipefail
umask 027

# activate venv if existing
test -f ~/.virtualenvs/ansible-2.10/bin/activate &&
 source ~/.virtualenvs/ansible-2.10/bin/activate

# get friendly less function
test -f ~/bin/dot.bashfunctions &&
 source ~/bin/dot.bashfunctions

f=~/.tmp/ansible-doc-list

is_database_ok() {
    local nb_days

    nb_days=7

    test -f $f || return 1

    find $f -mtime -$nb_days | grep -qE .
}

module_list() {
    awk '{ print $1 }' < $f
}

module_and_desc() {
    < $f
}

grep_module() {
    test $# -ne 1 && echo "FATAL: nb args != 1" && exit 1
    module_list | igrep "$1"
}

igrep() {
    grep -iE "$@"
}

is_unique() {
    test $# -ne 1 && echo "FATAL: nb args != 1" && exit 1
    count=$(cat | igrep -c "$1")
    test  $count -eq 1
}

get_module_unique() {
    test $# -ne 1 && echo "FATAL: nb args != 1" && exit 1

    if module_list     | is_unique "^$1\$"; then module_list | igrep "^$1\$"; return 0; fi
    if module_list     | is_unique "(^|\\.)$1";   then module_list | igrep "(^|\\.)$1"; return 0; fi
    if module_list     | is_unique "$1\$";   then module_list | igrep "$1\$"; return 0; fi
    if module_list     | is_unique "$1";    then module_list | igrep "$1";    return 0; fi
    if module_and_desc | is_unique "$1";    then module_list_and_desc | igrep "$1"; return 0; fi

    for exclude in "windows";
    do
        if module_list     | grep -vE "$exclude" | is_unique "$1"; then module_list | grep -vE "$exclude" | igrep "$1"; return 0; fi
    done

    for include in "^community";
    do
        if module_list     | grep -E "$include" | is_unique "$1"; then module_list | grep -E "$include" | igrep "$1"; return 0; fi
    done

    return 1
}

if ! is_database_ok; then
    ansible-doc -l > $f
fi


if [[ $# -eq 0 ]]; then
    less $f;
    exit $?
fi

arg="$1"

if ! module_list | igrep -q "$arg" &&
   ! igrep -q "$arg" < $f; then
    echo "No match for $arg"
    exit 1
fi

if ! get_module_unique "$arg" >/dev/null; then
    grep --color=always "$arg" $f
    exit 1
fi

#echo module is $(get_module_unique "$arg")
ansible-doc -s $(get_module_unique "$arg")
