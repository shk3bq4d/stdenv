#!/usr/bin/env bash                                            
# ex: set filetype=sh :
##
##Usage:  __SCRIPT__ FILENAME
##generates a new shell script using default template
##    FILENAME: new script's filepath
##

set -euo pipefail
function usage() { sed -r -n -e "s/__SCRIPT__/$(basename $0)/" -e '/^##/s/^..// p'   $0 ; }
[[ $# -eq 1 && ( "$1" == -h || "$1" == --help ) ]] && usage && exit 0
[[ $# -lt 1 || $# -gt 1 ]] && echo "FATAL: incorrect number of args" && usage && exit 1
for i in chmod touch; do ! command -v "$i" &>/dev/null && echo "FATAL: unexisting dependency $i" && exit 1; done

f="$1"
[[ -f "$f" ]] && echo "FATAL: already exists file $f" && exit 1
[[ -d "$f" ]] && echo "FATAL: already exists directory $f" && exit 1

touch "$f" || { echo "FATAL: Can't touch to $f" && exit 1; }

echo \
"#!/usr/bin/env bash                                            
# ex: set filetype=sh :
##
##Usage:  __SCRIPT__ REMOTEHOST [REMOTEPORT]
##configures whatever action with whatever config
##    REMOTEHOST: remote host where to ssh
##    REMOTEPORT: JMX port (default: 12345)
##
## Author: Jeff Malone, $(date +'%d %b %Y')
##

set -euo pipefail

# function usage() { sed -r -n -e "s/__SCRIPT__/\$\(basename \$0\)/" -e '/^##/s/^..// p'   \$0 ; }

# [[ \$# -eq 1 && ( "\$1" == -h || "\$1" == --help ) ]] && usage && exit 0

# [[ \$# -lt 1 || \$# -gt 2 ]] && echo "FATAL: incorrect number of args" && usage && exit 1

# for i in sed which grep; do ! command -v "\$i" &>/dev/null && echo "FATAL: unexisting dependency \$i" && exit 1; done

# DIR=\"\$( cd -P \"\$( dirname \"\$(readlink -f \"\${BASH_SOURCE[0]}\")\" )\" && pwd )\"

# exec > >(tee -a ~/log/\$(basename \$0 .sh).log)
# exec > >(tee >(logger --id=$$ -t "$(basename $0)" -p user.info ))
# exec 2>&1

echo EOF
exit 0
" >> "$f"

chmod u+x "$f"

echo "$f"
exit 0
